//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Portal.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERPEntities : DbContext
    {
        public ERPEntities()
            : base("name=ERPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<RoleUIActionMapping> RoleUIActionMappings { get; set; }
        public virtual DbSet<UserInterface> UserInterfaces { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<FinancialYear> FinancialYears { get; set; }
        public virtual DbSet<LeadSource> LeadSources { get; set; }
        public virtual DbSet<LeadStatu> LeadStatus { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<PaymentTerm> PaymentTerms { get; set; }
        public virtual DbSet<ProductType> ProductTypes { get; set; }
        public virtual DbSet<UOM> UOMs { get; set; }
        public virtual DbSet<ProductOpeningStock> ProductOpeningStocks { get; set; }
        public virtual DbSet<ProductBOM> ProductBOMs { get; set; }
        public virtual DbSet<PaymentMode> PaymentModes { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<SLType> SLTypes { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EmployeeFamilyInfo> EmployeeFamilyInfoes { get; set; }
        public virtual DbSet<EmployeePayInfo> EmployeePayInfoes { get; set; }
        public virtual DbSet<Lead> Leads { get; set; }
        public virtual DbSet<EmployeeReportingInfo> EmployeeReportingInfoes { get; set; }
        public virtual DbSet<EmployeeStateMapping> EmployeeStateMappings { get; set; }
        public virtual DbSet<Tax> Taxes { get; set; }
        public virtual DbSet<LeadFollowUp> LeadFollowUps { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<FollowUpActivityType> FollowUpActivityTypes { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerProductMapping> CustomerProductMappings { get; set; }
        public virtual DbSet<CustomerType> CustomerTypes { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<GLMainGroup> GLMainGroups { get; set; }
        public virtual DbSet<GLSubGroup> GLSubGroups { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<Quotation> Quotations { get; set; }
        public virtual DbSet<QuotationProductDetail> QuotationProductDetails { get; set; }
        public virtual DbSet<QuotationSetting> QuotationSettings { get; set; }
        public virtual DbSet<QuotationSupportingDocument> QuotationSupportingDocuments { get; set; }
        public virtual DbSet<QuotationTaxDetail> QuotationTaxDetails { get; set; }
        public virtual DbSet<QuotationTermsDetail> QuotationTermsDetails { get; set; }
        public virtual DbSet<TermsTemplate> TermsTemplates { get; set; }
        public virtual DbSet<TermTemplateDetail> TermTemplateDetails { get; set; }
        public virtual DbSet<POProductDetail> POProductDetails { get; set; }
        public virtual DbSet<POSetting> POSettings { get; set; }
        public virtual DbSet<POSupportingDocument> POSupportingDocuments { get; set; }
        public virtual DbSet<POTermsDetail> POTermsDetails { get; set; }
        public virtual DbSet<PO> POes { get; set; }
        public virtual DbSet<POTaxDetail> POTaxDetails { get; set; }
        public virtual DbSet<PurchaseInvoice> PurchaseInvoices { get; set; }
        public virtual DbSet<PurchaseInvoiceProductDetail> PurchaseInvoiceProductDetails { get; set; }
        public virtual DbSet<PurchaseInvoiceTaxDetail> PurchaseInvoiceTaxDetails { get; set; }
        public virtual DbSet<PurchaseInvoiceTermsDetail> PurchaseInvoiceTermsDetails { get; set; }
        public virtual DbSet<SaleInvoice> SaleInvoices { get; set; }
        public virtual DbSet<SaleInvoiceProductDetail> SaleInvoiceProductDetails { get; set; }
        public virtual DbSet<SaleInvoiceTaxDetail> SaleInvoiceTaxDetails { get; set; }
        public virtual DbSet<SaleInvoiceTermsDetail> SaleInvoiceTermsDetails { get; set; }
        public virtual DbSet<SOProductDetail> SOProductDetails { get; set; }
        public virtual DbSet<SOTermsDetail> SOTermsDetails { get; set; }
        public virtual DbSet<ProductSubCategoryStateTaxMapping> ProductSubCategoryStateTaxMappings { get; set; }
        public virtual DbSet<CustomerPayment> CustomerPayments { get; set; }
        public virtual DbSet<SOSetting> SOSettings { get; set; }
        public virtual DbSet<VendorPayment> VendorPayments { get; set; }
        public virtual DbSet<ChallanProductDetail> ChallanProductDetails { get; set; }
        public virtual DbSet<ChallanTaxDetail> ChallanTaxDetails { get; set; }
        public virtual DbSet<ChallanTermsDetail> ChallanTermsDetails { get; set; }
        public virtual DbSet<ComapnyBranch> ComapnyBranches { get; set; }
        public virtual DbSet<CostCenter> CostCenters { get; set; }
        public virtual DbSet<CustomerForm> CustomerForms { get; set; }
        public virtual DbSet<DeliveryChallan> DeliveryChallans { get; set; }
        public virtual DbSet<FormType> FormTypes { get; set; }
        public virtual DbSet<GL> GLs { get; set; }
        public virtual DbSet<GLDetail> GLDetails { get; set; }
        public virtual DbSet<MRN> MRNs { get; set; }
        public virtual DbSet<MRNProductDetail> MRNProductDetails { get; set; }
        public virtual DbSet<ProductTrnStock> ProductTrnStocks { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<SL> SLs { get; set; }
        public virtual DbSet<SLDetail> SLDetails { get; set; }
        public virtual DbSet<STN> STNs { get; set; }
        public virtual DbSet<STNProductDetail> STNProductDetails { get; set; }
        public virtual DbSet<STR> STRs { get; set; }
        public virtual DbSet<STRProductDetail> STRProductDetails { get; set; }
        public virtual DbSet<SubCostCenter> SubCostCenters { get; set; }
        public virtual DbSet<UserEmailSetting> UserEmailSettings { get; set; }
        public virtual DbSet<VendorForm> VendorForms { get; set; }
        public virtual DbSet<VendorProductMapping> VendorProductMappings { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
        public virtual DbSet<VoucherDetail> VoucherDetails { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<SOTaxDetail> SOTaxDetails { get; set; }
        public virtual DbSet<CustomerBranch> CustomerBranches { get; set; }
        public virtual DbSet<SO> SOes { get; set; }
        public virtual DbSet<FreightType> FreightTypes { get; set; }
        public virtual DbSet<TransferClosingBalance> TransferClosingBalances { get; set; }
        public virtual DbSet<Logo> Logoes { get; set; }
        public virtual DbSet<Aboutu> Aboutus { get; set; }
        public virtual DbSet<WelcomeHome> WelcomeHomes { get; set; }
        public virtual DbSet<Copyright> Copyrights { get; set; }
        public virtual DbSet<HomeAbout> HomeAbouts { get; set; }
        public virtual DbSet<ButtonTitle> ButtonTitles { get; set; }
        public virtual DbSet<HomeSlider> HomeSliders { get; set; }
        public virtual DbSet<ProductImageDetail> ProductImageDetails { get; set; }
        public virtual DbSet<ProductArh> ProductArhs { get; set; }
        public virtual DbSet<ProductDetailArh> ProductDetailArhs { get; set; }
        public virtual DbSet<ContactInfo> ContactInfoes { get; set; }
        public virtual DbSet<HomeUpdate> HomeUpdates { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<SubMenu> SubMenus { get; set; }
        public virtual DbSet<SubChildMenu> SubChildMenus { get; set; }
        public virtual DbSet<UserSupportingDocument> UserSupportingDocuments { get; set; }
        public virtual DbSet<UserRegistration> UserRegistrations { get; set; }
        public virtual DbSet<ProductTechSpecification> ProductTechSpecifications { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductMainGroup> ProductMainGroups { get; set; }
        public virtual DbSet<ProductSubGroup> ProductSubGroups { get; set; }
        public virtual DbSet<ProductSubChildGroup> ProductSubChildGroups { get; set; }
        public virtual DbSet<MSME> MSMEs { get; set; }
        public virtual DbSet<BuyerProduct> BuyerProducts { get; set; }
        public virtual DbSet<AdminUser> AdminUsers { get; set; }
        public virtual DbSet<AssociatesLog> AssociatesLogs { get; set; }
        public virtual DbSet<BaseUrl> BaseUrls { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<LatestNew> LatestNews { get; set; }
        public virtual DbSet<ProductOld> ProductOlds { get; set; }
        public virtual DbSet<SellerProduct> SellerProducts { get; set; }
        public virtual DbSet<SocialLink> SocialLinks { get; set; }
        public virtual DbSet<TechSpecification> TechSpecifications { get; set; }
        public virtual DbSet<UpcomingEvent> UpcomingEvents { get; set; }
        public virtual DbSet<UploadFormExcel> UploadFormExcels { get; set; }
        public virtual DbSet<UploadForm> UploadForms { get; set; }
        public virtual DbSet<DeliveryStatu> DeliveryStatus { get; set; }
        public virtual DbSet<GST> GSTs { get; set; }
        public virtual DbSet<GSTPercent> GSTPercents { get; set; }
        public virtual DbSet<BuyerProductTechSpecification> BuyerProductTechSpecifications { get; set; }
        public virtual DbSet<SellerProductTechSpecification> SellerProductTechSpecifications { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<ProductCode> ProductCodes { get; set; }
    
        public virtual ObjectResult<proc_GetRoleWiseChildUI_Result> proc_GetRoleWiseChildUI(Nullable<int> parentUIId, Nullable<int> roleId)
        {
            var parentUIIdParameter = parentUIId.HasValue ?
                new ObjectParameter("ParentUIId", parentUIId) :
                new ObjectParameter("ParentUIId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetRoleWiseChildUI_Result>("proc_GetRoleWiseChildUI", parentUIIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<proc_GetRoleWiseParentUI_Result> proc_GetRoleWiseParentUI(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetRoleWiseParentUI_Result>("proc_GetRoleWiseParentUI", roleIdParameter);
        }
    
        public virtual int proc_GetCompanies(string companyName, string city, string panNo, string phoneNo, string tinNo)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var panNoParameter = panNo != null ?
                new ObjectParameter("PanNo", panNo) :
                new ObjectParameter("PanNo", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var tinNoParameter = tinNo != null ?
                new ObjectParameter("TinNo", tinNo) :
                new ObjectParameter("TinNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_GetCompanies", companyNameParameter, cityParameter, panNoParameter, phoneNoParameter, tinNoParameter);
        }
    
        public virtual int proc_CopyAssemblyBOM(Nullable<long> copyFromAssemblyId, Nullable<long> copyToAssemblyId, Nullable<int> createdBy)
        {
            var copyFromAssemblyIdParameter = copyFromAssemblyId.HasValue ?
                new ObjectParameter("CopyFromAssemblyId", copyFromAssemblyId) :
                new ObjectParameter("CopyFromAssemblyId", typeof(long));
    
            var copyToAssemblyIdParameter = copyToAssemblyId.HasValue ?
                new ObjectParameter("CopyToAssemblyId", copyToAssemblyId) :
                new ObjectParameter("CopyToAssemblyId", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_CopyAssemblyBOM", copyFromAssemblyIdParameter, copyToAssemblyIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<proc_GetHomeSubMenu_Result> proc_GetHomeSubMenu(Nullable<int> menuId)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetHomeSubMenu_Result>("proc_GetHomeSubMenu", menuIdParameter);
        }
    
        public virtual ObjectResult<proc_GetHomeParentMenu_Result1> proc_GetHomeParentMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetHomeParentMenu_Result1>("proc_GetHomeParentMenu");
        }
    
        public virtual ObjectResult<proc_GetHomeSubChildMenu_Result> proc_GetHomeSubChildMenu(Nullable<int> subMenuId)
        {
            var subMenuIdParameter = subMenuId.HasValue ?
                new ObjectParameter("SubMenuId", subMenuId) :
                new ObjectParameter("SubMenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetHomeSubChildMenu_Result>("proc_GetHomeSubChildMenu", subMenuIdParameter);
        }
    }
}
